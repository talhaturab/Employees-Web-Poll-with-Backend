{"ast":null,"code":"import { RECEIVE_USERS } from \"../actions/users\";\nimport { UPDATE_USER_QUESTIONS } from \"../actions/users\";\nimport { UPDATE_USER_ANSWERS } from \"../actions/users\";\nexport default function users() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case RECEIVE_USERS:\n      return { ...state,\n        ...action.users\n      };\n\n    case UPDATE_USER_QUESTIONS:\n      const {\n        question\n      } = action;\n      return { ...state,\n        [question.user_id]: { ...state[question.user_idauthedUser],\n          questions: state[question.user_idauthedUser].questions.concat(questionID)\n        }\n      };\n\n    case UPDATE_USER_ANSWERS:\n      const {\n        qid,\n        answer\n      } = action.answer;\n      const authedUserID = action.answer.authedUser;\n      return { ...state,\n        [authedUserID]: { ...state[authedUserID],\n          answers: { ...state[authedUserID].answers,\n            [qid]: answer\n          }\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["RECEIVE_USERS","UPDATE_USER_QUESTIONS","UPDATE_USER_ANSWERS","users","state","action","type","question","user_id","user_idauthedUser","questions","concat","questionID","qid","answer","authedUserID","authedUser","answers"],"sources":["/home/talha/Documents/Laravel With React/Employees poll project with laravel/employee-polls-web-app/src/reducers/users.js"],"sourcesContent":["import { RECEIVE_USERS } from \"../actions/users\";\nimport { UPDATE_USER_QUESTIONS } from \"../actions/users\";\nimport { UPDATE_USER_ANSWERS } from \"../actions/users\";\n\nexport default function users(state = {}, action) {\n\tswitch (action.type) {\n\t\tcase RECEIVE_USERS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.users,\n\t\t\t};\n\t\tcase UPDATE_USER_QUESTIONS:\n\t\t\tconst { question } = action;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[question.user_id]: {\n\t\t\t\t\t...state[question.user_idauthedUser],\n\t\t\t\t\tquestions: state[question.user_idauthedUser].questions.concat(questionID),\n\t\t\t\t},\n\t\t\t};\n\t\tcase UPDATE_USER_ANSWERS:\n\t\t\tconst { qid, answer } = action.answer;\n\t\t\tconst authedUserID = action.answer.authedUser;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[authedUserID]: {\n\t\t\t\t\t...state[authedUserID],\n\t\t\t\t\tanswers: { ...state[authedUserID].answers, [qid]: answer },\n\t\t\t\t},\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAASC,qBAAT,QAAsC,kBAAtC;AACA,SAASC,mBAAT,QAAoC,kBAApC;AAEA,eAAe,SAASC,KAAT,GAAmC;EAAA,IAApBC,KAAoB,uEAAZ,EAAY;EAAA,IAARC,MAAQ;;EACjD,QAAQA,MAAM,CAACC,IAAf;IACC,KAAKN,aAAL;MACC,OAAO,EACN,GAAGI,KADG;QAEN,GAAGC,MAAM,CAACF;MAFJ,CAAP;;IAID,KAAKF,qBAAL;MACC,MAAM;QAAEM;MAAF,IAAeF,MAArB;MAEA,OAAO,EACN,GAAGD,KADG;QAEN,CAACG,QAAQ,CAACC,OAAV,GAAoB,EACnB,GAAGJ,KAAK,CAACG,QAAQ,CAACE,iBAAV,CADW;UAEnBC,SAAS,EAAEN,KAAK,CAACG,QAAQ,CAACE,iBAAV,CAAL,CAAkCC,SAAlC,CAA4CC,MAA5C,CAAmDC,UAAnD;QAFQ;MAFd,CAAP;;IAOD,KAAKV,mBAAL;MACC,MAAM;QAAEW,GAAF;QAAOC;MAAP,IAAkBT,MAAM,CAACS,MAA/B;MACA,MAAMC,YAAY,GAAGV,MAAM,CAACS,MAAP,CAAcE,UAAnC;MAEA,OAAO,EACN,GAAGZ,KADG;QAEN,CAACW,YAAD,GAAgB,EACf,GAAGX,KAAK,CAACW,YAAD,CADO;UAEfE,OAAO,EAAE,EAAE,GAAGb,KAAK,CAACW,YAAD,CAAL,CAAoBE,OAAzB;YAAkC,CAACJ,GAAD,GAAOC;UAAzC;QAFM;MAFV,CAAP;;IAQD;MACC,OAAOV,KAAP;EA7BF;AA+BA"},"metadata":{},"sourceType":"module"}