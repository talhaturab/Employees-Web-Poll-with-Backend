{"ast":null,"code":"import { _getUsers } from \"../utils/_DATA\";\nimport { _getQuestions } from \"../utils/_DATA\";\nimport { receiveUsers } from \"./users\";\nimport { receiveQuestions } from \"./questions\";\nexport default function handleInitialData() {\n  return async dispatch => {\n    // const users = await _getUsers().then((res) => (res));\n    // const questions = await _getQuestions().then((res) => (res));\n    // dispatch(receiveUsers(users));\n    // dispatch(receiveQuestions(questions))\n    const getUsers = async () => {\n      try {\n        const response = await fetch(\"http://127.0.0.1:8000/api/getQuestions\");\n\n        if (!response.ok) {\n          throw new Error(`Error! status: ${response.status}`);\n        }\n\n        const result = await response.json();\n        console.log(result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    test();\n  };\n}","map":{"version":3,"names":["_getUsers","_getQuestions","receiveUsers","receiveQuestions","handleInitialData","dispatch","getUsers","response","fetch","ok","Error","status","result","json","console","log","error","test"],"sources":["/home/talha/Documents/Laravel With React/Employees poll project with laravel/employee-polls-web-app/src/actions/shared.js"],"sourcesContent":["import { _getUsers } from \"../utils/_DATA\";\nimport { _getQuestions } from \"../utils/_DATA\";\nimport { receiveUsers } from \"./users\";\nimport { receiveQuestions } from \"./questions\";\n\n\n\nexport default function handleInitialData() {\n\treturn async (dispatch) => {\n\t\t// const users = await _getUsers().then((res) => (res));\n\t\t// const questions = await _getQuestions().then((res) => (res));\n\t\t// dispatch(receiveUsers(users));\n        // dispatch(receiveQuestions(questions))\n\n        const getUsers = async () => {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(\n\t\t\t\t\t\"http://127.0.0.1:8000/api/getQuestions\"\n\t\t\t\t);\n\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow new Error(`Error! status: ${response.status}`);\n\t\t\t\t}\n\n\t\t\t\tconst result = await response.json();\n\t\t\t\tconsole.log(result);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t};\n\t\ttest();\n\t};\n}\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,gBAA1B;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,SAASC,gBAAT,QAAiC,aAAjC;AAIA,eAAe,SAASC,iBAAT,GAA6B;EAC3C,OAAO,MAAOC,QAAP,IAAoB;IAC1B;IACA;IACA;IACM;IAEA,MAAMC,QAAQ,GAAG,YAAY;MAClC,IAAI;QACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC3B,wCAD2B,CAA5B;;QAIA,IAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;UACjB,MAAM,IAAIC,KAAJ,CAAW,kBAAiBH,QAAQ,CAACI,MAAO,EAA5C,CAAN;QACA;;QAED,MAAMC,MAAM,GAAG,MAAML,QAAQ,CAACM,IAAT,EAArB;QACAC,OAAO,CAACC,GAAR,CAAYH,MAAZ;MACA,CAXD,CAWE,OAAOI,KAAP,EAAc;QACfF,OAAO,CAACC,GAAR,CAAYC,KAAZ;MACA;IACD,CAfK;;IAgBNC,IAAI;EACJ,CAvBD;AAwBA"},"metadata":{},"sourceType":"module"}