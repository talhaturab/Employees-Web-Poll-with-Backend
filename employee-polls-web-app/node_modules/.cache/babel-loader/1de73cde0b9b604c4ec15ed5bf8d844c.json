{"ast":null,"code":"import { _saveQuestion, _saveQuestionAnswer } from \"../utils/_DATA\";\nimport { updateUserAnswers, updateUserQuestions } from \"./users\";\nexport const RECEIVE_QUESTIONS = \"RECEIVE_QUESTIONS\";\nexport const ADD_QUESTION = \"ADD_QUESTION\";\nexport const ADD_ANSWER = \"ADD_ANSWER\";\nexport function receiveQuestions(questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions\n  };\n}\n\nfunction addQuestion(question) {\n  return {\n    type: ADD_QUESTION,\n    question\n  };\n}\n\nexport function handleAddQuestion(optionOneText, optionTwoText) {\n  return (dispatch, getState) => {\n    const {\n      authedUser\n    } = getState();\n    return _saveQuestion({\n      optionOneText,\n      optionTwoText,\n      author: authedUser\n    }).then(question => {\n      dispatch(addQuestion(question));\n      dispatch(updateUserQuestions(question.id, authedUser));\n    });\n  };\n}\n\nfunction addAnswer(answer) {\n  return {\n    type: ADD_ANSWER,\n    answer\n  };\n}\n\nexport function handleAddAnswer(answerInfo) {\n  return async dispatch => {// return _saveQuestionAnswer(answerInfo).then(() => {\n    // \tdispatch(addAnswer(answerInfo));\n    // \tdispatch(updateUserAnswers(answerInfo));\n    // });\n  };\n}","map":{"version":3,"names":["_saveQuestion","_saveQuestionAnswer","updateUserAnswers","updateUserQuestions","RECEIVE_QUESTIONS","ADD_QUESTION","ADD_ANSWER","receiveQuestions","questions","type","addQuestion","question","handleAddQuestion","optionOneText","optionTwoText","dispatch","getState","authedUser","author","then","id","addAnswer","answer","handleAddAnswer","answerInfo"],"sources":["/home/talha/Documents/Laravel With React/Employees poll project with laravel/employee-polls-web-app/src/actions/questions.js"],"sourcesContent":["import { _saveQuestion, _saveQuestionAnswer } from \"../utils/_DATA\";\nimport { updateUserAnswers, updateUserQuestions } from \"./users\";\n\nexport const RECEIVE_QUESTIONS = \"RECEIVE_QUESTIONS\";\nexport const ADD_QUESTION = \"ADD_QUESTION\";\nexport const ADD_ANSWER = \"ADD_ANSWER\";\n\nexport function receiveQuestions(questions) {\n\treturn {\n\t\ttype: RECEIVE_QUESTIONS,\n\t\tquestions,\n\t};\n}\n\nfunction addQuestion(question) {\n\treturn {\n\t\ttype: ADD_QUESTION,\n\t\tquestion,\n\t};\n}\n\nexport function handleAddQuestion(optionOneText, optionTwoText) {\n\treturn (dispatch, getState) => {\n\t\tconst { authedUser } = getState();\n\n\t\treturn _saveQuestion({\n\t\t\toptionOneText,\n\t\t\toptionTwoText,\n\t\t\tauthor: authedUser,\n\t\t}).then((question) => {\n\t\t\tdispatch(addQuestion(question));\n\t\t\tdispatch(updateUserQuestions(question.id, authedUser));\n\t\t});\n\t};\n}\n\nfunction addAnswer(answer) {\n\treturn {\n\t\ttype: ADD_ANSWER,\n\t\tanswer,\n\t};\n}\n\nexport function handleAddAnswer(answerInfo) {\n\treturn async (dispatch) => {\n\n        \n\n\t\t// return _saveQuestionAnswer(answerInfo).then(() => {\n\t\t// \tdispatch(addAnswer(answerInfo));\n\t\t// \tdispatch(updateUserAnswers(answerInfo));\n\t\t// });\n\t};\n\n\n}\n"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,mBAAxB,QAAmD,gBAAnD;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,QAAuD,SAAvD;AAEA,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,UAAU,GAAG,YAAnB;AAEP,OAAO,SAASC,gBAAT,CAA0BC,SAA1B,EAAqC;EAC3C,OAAO;IACNC,IAAI,EAAEL,iBADA;IAENI;EAFM,CAAP;AAIA;;AAED,SAASE,WAAT,CAAqBC,QAArB,EAA+B;EAC9B,OAAO;IACNF,IAAI,EAAEJ,YADA;IAENM;EAFM,CAAP;AAIA;;AAED,OAAO,SAASC,iBAAT,CAA2BC,aAA3B,EAA0CC,aAA1C,EAAyD;EAC/D,OAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;IAC9B,MAAM;MAAEC;IAAF,IAAiBD,QAAQ,EAA/B;IAEA,OAAOhB,aAAa,CAAC;MACpBa,aADoB;MAEpBC,aAFoB;MAGpBI,MAAM,EAAED;IAHY,CAAD,CAAb,CAIJE,IAJI,CAIER,QAAD,IAAc;MACrBI,QAAQ,CAACL,WAAW,CAACC,QAAD,CAAZ,CAAR;MACAI,QAAQ,CAACZ,mBAAmB,CAACQ,QAAQ,CAACS,EAAV,EAAcH,UAAd,CAApB,CAAR;IACA,CAPM,CAAP;EAQA,CAXD;AAYA;;AAED,SAASI,SAAT,CAAmBC,MAAnB,EAA2B;EAC1B,OAAO;IACNb,IAAI,EAAEH,UADA;IAENgB;EAFM,CAAP;AAIA;;AAED,OAAO,SAASC,eAAT,CAAyBC,UAAzB,EAAqC;EAC3C,OAAO,MAAOT,QAAP,IAAoB,CAI1B;IACA;IACA;IACA;EACA,CARD;AAWA"},"metadata":{},"sourceType":"module"}