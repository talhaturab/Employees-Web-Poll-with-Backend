{"ast":null,"code":"import { _getUsers } from \"../utils/_DATA\";\nimport { _getQuestions } from \"../utils/_DATA\";\nimport { receiveUsers } from \"./users\";\nimport { receiveQuestions } from \"./questions\";\n\nconst getUsers = async () => {\n  try {\n    const response = await fetch(\"http://127.0.0.1:8000/api/getUsers\");\n\n    if (!response.ok) {\n      throw new Error(`Error! status: ${response.status}`);\n    }\n\n    const result = await response.json();\n    console.log(response);\n    return result;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getQuestions = async () => {\n  try {\n    const response = await fetch(\"http://127.0.0.1:8000/api/getQuestions\");\n\n    if (!response.ok) {\n      throw new Error(`Error! status: ${response.status}`);\n    }\n\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default function handleInitialData() {\n  return async dispatch => {\n    const users = await getUsers();\n    const questions = await getQuestions();\n    dispatch(receiveUsers(users));\n    dispatch(receiveQuestions(questions));\n  };\n}","map":{"version":3,"names":["_getUsers","_getQuestions","receiveUsers","receiveQuestions","getUsers","response","fetch","ok","Error","status","result","json","console","log","error","getQuestions","handleInitialData","dispatch","users","questions"],"sources":["/home/talha/Documents/Laravel With React/Employees poll project with laravel/employee-polls-web-app/src/actions/shared.js"],"sourcesContent":["import { _getUsers } from \"../utils/_DATA\";\nimport { _getQuestions } from \"../utils/_DATA\";\nimport { receiveUsers } from \"./users\";\nimport { receiveQuestions } from \"./questions\";\n\nconst getUsers = async () => {\n\ttry {\n\t\tconst response = await fetch(\"http://127.0.0.1:8000/api/getUsers\");\n\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(`Error! status: ${response.status}`);\n\t\t}\n\n\t\tconst result = await response.json();\n        console.log(response)\n\t\treturn result;\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n};\n\nconst getQuestions = async () => {\n\ttry {\n\t\tconst response = await fetch(\"http://127.0.0.1:8000/api/getQuestions\");\n\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(`Error! status: ${response.status}`);\n\t\t}\n\n\t\tconst result = await response.json();\n\t\treturn result;\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n};\n\nexport default function handleInitialData() {\n\treturn async (dispatch) => {\n\t\tconst users = await getUsers();\n\t\tconst questions = await getQuestions();\n\t\tdispatch(receiveUsers(users));\n\t\tdispatch(receiveQuestions(questions));\n\t};\n}\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,gBAA1B;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,SAASC,gBAAT,QAAiC,aAAjC;;AAEA,MAAMC,QAAQ,GAAG,YAAY;EAC5B,IAAI;IACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAD,CAA5B;;IAEA,IAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;MACjB,MAAM,IAAIC,KAAJ,CAAW,kBAAiBH,QAAQ,CAACI,MAAO,EAA5C,CAAN;IACA;;IAED,MAAMC,MAAM,GAAG,MAAML,QAAQ,CAACM,IAAT,EAArB;IACMC,OAAO,CAACC,GAAR,CAAYR,QAAZ;IACN,OAAOK,MAAP;EACA,CAVD,CAUE,OAAOI,KAAP,EAAc;IACfF,OAAO,CAACC,GAAR,CAAYC,KAAZ;EACA;AACD,CAdD;;AAgBA,MAAMC,YAAY,GAAG,YAAY;EAChC,IAAI;IACH,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAD,CAA5B;;IAEA,IAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;MACjB,MAAM,IAAIC,KAAJ,CAAW,kBAAiBH,QAAQ,CAACI,MAAO,EAA5C,CAAN;IACA;;IAED,MAAMC,MAAM,GAAG,MAAML,QAAQ,CAACM,IAAT,EAArB;IACA,OAAOD,MAAP;EACA,CATD,CASE,OAAOI,KAAP,EAAc;IACfF,OAAO,CAACC,GAAR,CAAYC,KAAZ;EACA;AACD,CAbD;;AAeA,eAAe,SAASE,iBAAT,GAA6B;EAC3C,OAAO,MAAOC,QAAP,IAAoB;IAC1B,MAAMC,KAAK,GAAG,MAAMd,QAAQ,EAA5B;IACA,MAAMe,SAAS,GAAG,MAAMJ,YAAY,EAApC;IACAE,QAAQ,CAACf,YAAY,CAACgB,KAAD,CAAb,CAAR;IACAD,QAAQ,CAACd,gBAAgB,CAACgB,SAAD,CAAjB,CAAR;EACA,CALD;AAMA"},"metadata":{},"sourceType":"module"}