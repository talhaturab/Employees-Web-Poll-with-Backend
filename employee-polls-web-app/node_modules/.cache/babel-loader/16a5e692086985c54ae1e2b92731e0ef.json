{"ast":null,"code":"var _jsxFileName = \"/home/talha/Documents/Laravel With React/Employees poll project with laravel/employee-polls-web-app/src/components/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport { connect } from \"react-redux\";\nimport ListItemPoll from \"./ListItemPoll\";\nimport { useState } from \"react\";\nimport { formatDate } from \"../utils/helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = props => {\n  _s();\n\n  const [showAnswered, setShowAnswered] = useState(false);\n  const [showUnanswered, setShowUnanswered] = useState(true);\n\n  const showAnsweredPolls = e => {\n    e.preventDefault();\n    setShowAnswered(true);\n    setShowUnanswered(false);\n  };\n\n  const showUnansweredPolls = e => {\n    e.preventDefault();\n    setShowAnswered(false);\n    setShowUnanswered(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"center\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          margin: \"10px\"\n        },\n        onClick: showAnsweredPolls,\n        children: \"Show Answered Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          margin: \"10px\"\n        },\n        onClick: showUnansweredPolls,\n        children: \"Show UnAnswered Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"UnAnswered Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"flex-container\",\n        children: showUnanswered && props.unansweredPolls.map(poll => /*#__PURE__*/_jsxDEV(ListItemPoll, {\n          item: poll\n        }, poll.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 8\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Answered Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"flex-container\",\n        children: showAnswered && props.answeredPolls.map(poll => /*#__PURE__*/_jsxDEV(ListItemPoll, {\n          item: poll\n        }, poll.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 8\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Dashboard, \"X5zhbdc3ByjtdP/be7aXgEE49X8=\");\n\n_c = Dashboard;\n\nconst mapStateToProps = _ref => {\n  let {\n    questions,\n    authedUser\n  } = _ref;\n  const polls = Object.keys(questions).sort((a, b) => {\n    console.log(new Date(questions[b].created_at).getTime() - new Date(questions[a].created_at).getTime());\n    return console.log(new Date(questions[b].created_at).getTime() - new Date(questions[a].created_at).getTime());\n  });\n  console.log(polls);\n  const unansweredPolls = [];\n  const answeredPolls = [];\n\n  for (const id of polls) {\n    const question = questions[id];\n    const votes = question.optionOneVotes.concat(question.optionTwoVotes);\n\n    if (votes.includes(authedUser)) {\n      answeredPolls.push(question);\n    } else {\n      unansweredPolls.push(question);\n    }\n  }\n\n  return {\n    unansweredPolls,\n    answeredPolls\n  };\n};\n\nexport default connect(mapStateToProps)(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["connect","ListItemPoll","useState","formatDate","Dashboard","props","showAnswered","setShowAnswered","showUnanswered","setShowUnanswered","showAnsweredPolls","e","preventDefault","showUnansweredPolls","margin","unansweredPolls","map","poll","id","answeredPolls","mapStateToProps","questions","authedUser","polls","Object","keys","sort","a","b","console","log","Date","created_at","getTime","question","votes","optionOneVotes","concat","optionTwoVotes","includes","push"],"sources":["/home/talha/Documents/Laravel With React/Employees poll project with laravel/employee-polls-web-app/src/components/Dashboard.js"],"sourcesContent":["import { connect } from \"react-redux\";\nimport ListItemPoll from \"./ListItemPoll\";\nimport { useState } from \"react\";\nimport { formatDate } from \"../utils/helpers\";\n\nconst Dashboard = (props) => {\n\tconst [showAnswered, setShowAnswered] = useState(false);\n\tconst [showUnanswered, setShowUnanswered] = useState(true);\n\n\tconst showAnsweredPolls = (e) => {\n\t\te.preventDefault();\n\t\tsetShowAnswered(true);\n\t\tsetShowUnanswered(false);\n\t};\n\n\tconst showUnansweredPolls = (e) => {\n\t\te.preventDefault();\n\t\tsetShowAnswered(false);\n\t\tsetShowUnanswered(true);\n\t};\n\n\treturn (\n\t\t<div className=\"center\">\n\t\t\t<h1 className=\"center\">Dashboard</h1>\n\t\t\t<div>\n\t\t\t\t<button style={{ margin: \"10px\" }} onClick={showAnsweredPolls}>\n\t\t\t\t\tShow Answered Questions\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tstyle={{ margin: \"10px\" }}\n\t\t\t\t\tonClick={showUnansweredPolls}\n\t\t\t\t>\n\t\t\t\t\tShow UnAnswered Questions\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<h1>UnAnswered Questions</h1>\n\t\t\t\t<ul className=\"flex-container\">\n\t\t\t\t\t{showUnanswered &&\n\t\t\t\t\t\tprops.unansweredPolls.map((poll) => (\n\t\t\t\t\t\t\t<ListItemPoll item={poll} key={poll.id} />\n\t\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<h1>Answered Questions</h1>\n\t\t\t\t<ul className=\"flex-container\">\n\t\t\t\t\t{showAnswered &&\n\t\t\t\t\t\tprops.answeredPolls.map((poll) => (\n\t\t\t\t\t\t\t<ListItemPoll item={poll} key={poll.id} />\n\t\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = ({ questions, authedUser }) => {\n\tconst polls = Object.keys(questions).sort((a, b) => {\n\t\tconsole.log(\n\t\t\tnew Date(questions[b].created_at).getTime() -\n\t\t\t\tnew Date(questions[a].created_at).getTime()\n\t\t);\n\t\treturn console.log(\n\t\t\tnew Date(questions[b].created_at).getTime() -\n\t\t\t\tnew Date(questions[a].created_at).getTime()\n\t\t);\n\t});\n\n\tconsole.log(polls);\n\n\tconst unansweredPolls = [];\n\tconst answeredPolls = [];\n\n\tfor (const id of polls) {\n\t\tconst question = questions[id];\n\t\tconst votes = question.optionOneVotes.concat(question.optionTwoVotes);\n\t\tif (votes.includes(authedUser)) {\n\t\t\tansweredPolls.push(question);\n\t\t} else {\n\t\t\tunansweredPolls.push(question);\n\t\t}\n\t}\n\n\treturn {\n\t\tunansweredPolls,\n\t\tansweredPolls,\n\t};\n};\n\nexport default connect(mapStateToProps)(Dashboard);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}