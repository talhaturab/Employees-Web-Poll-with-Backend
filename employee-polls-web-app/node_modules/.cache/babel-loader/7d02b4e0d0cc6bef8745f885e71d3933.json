{"ast":null,"code":"import { RECEIVE_QUESTIONS } from \"../actions/questions\";\nimport { ADD_QUESTION } from \"../actions/questions\";\nimport { ADD_ANSWER } from \"../actions/questions\";\nexport default function questions() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case RECEIVE_QUESTIONS:\n      return { ...state,\n        ...action.questions\n      };\n\n    case ADD_QUESTION:\n      const {\n        question\n      } = action;\n      console.log(question);\n      return { ...state,\n        [question.id]: { ...question,\n          optionOneVotes: [],\n          optionTwoVotes: []\n        }\n      };\n\n    case ADD_ANSWER:\n      const {\n        authedUser,\n        qid,\n        answer\n      } = action.answer;\n      console.log(action);\n      return { ...state,\n        [qid]: { ...state[qid],\n          [`${answer}Votes`]: state[qid][`${answer}Votes`].concat(authedUser)\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["RECEIVE_QUESTIONS","ADD_QUESTION","ADD_ANSWER","questions","state","action","type","question","console","log","id","optionOneVotes","optionTwoVotes","authedUser","qid","answer","concat"],"sources":["/home/talha/Documents/Laravel With React/Employees poll project with laravel/employee-polls-web-app/src/reducers/questions.js"],"sourcesContent":["import { RECEIVE_QUESTIONS } from \"../actions/questions\";\nimport { ADD_QUESTION } from \"../actions/questions\";\nimport { ADD_ANSWER } from \"../actions/questions\";\n\nexport default function questions(state = {}, action) {\n\tswitch (action.type) {\n\t\tcase RECEIVE_QUESTIONS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.questions,\n\t\t\t};\n\t\tcase ADD_QUESTION:\n\t\t\tconst { question } = action;\n\t\t\tconsole.log(question);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[question.id]: {\n\t\t\t\t\t...question,\n\t\t\t\t\toptionOneVotes: [],\n\t\t\t\t\toptionTwoVotes: [],\n\t\t\t\t},\n\t\t\t};\n\t\tcase ADD_ANSWER:\n\t\t\tconst { authedUser, qid, answer } = action.answer;\n\t\t\tconsole.log(action);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[qid]: {\n\t\t\t\t\t...state[qid],\n\t\t\t\t\t[`${answer}Votes`]:\n\t\t\t\t\t\tstate[qid][`${answer}Votes`].concat(authedUser),\n\t\t\t\t},\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,sBAAlC;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,UAAT,QAA2B,sBAA3B;AAEA,eAAe,SAASC,SAAT,GAAuC;EAAA,IAApBC,KAAoB,uEAAZ,EAAY;EAAA,IAARC,MAAQ;;EACrD,QAAQA,MAAM,CAACC,IAAf;IACC,KAAKN,iBAAL;MACC,OAAO,EACN,GAAGI,KADG;QAEN,GAAGC,MAAM,CAACF;MAFJ,CAAP;;IAID,KAAKF,YAAL;MACC,MAAM;QAAEM;MAAF,IAAeF,MAArB;MACAG,OAAO,CAACC,GAAR,CAAYF,QAAZ;MACA,OAAO,EACN,GAAGH,KADG;QAEN,CAACG,QAAQ,CAACG,EAAV,GAAe,EACd,GAAGH,QADW;UAEdI,cAAc,EAAE,EAFF;UAGdC,cAAc,EAAE;QAHF;MAFT,CAAP;;IAQD,KAAKV,UAAL;MACC,MAAM;QAAEW,UAAF;QAAcC,GAAd;QAAmBC;MAAnB,IAA8BV,MAAM,CAACU,MAA3C;MACAP,OAAO,CAACC,GAAR,CAAYJ,MAAZ;MACA,OAAO,EACN,GAAGD,KADG;QAEN,CAACU,GAAD,GAAO,EACN,GAAGV,KAAK,CAACU,GAAD,CADF;UAEN,CAAE,GAAEC,MAAO,OAAX,GACCX,KAAK,CAACU,GAAD,CAAL,CAAY,GAAEC,MAAO,OAArB,EAA6BC,MAA7B,CAAoCH,UAApC;QAHK;MAFD,CAAP;;IAQD;MACC,OAAOT,KAAP;EA7BF;AA+BA"},"metadata":{},"sourceType":"module"}