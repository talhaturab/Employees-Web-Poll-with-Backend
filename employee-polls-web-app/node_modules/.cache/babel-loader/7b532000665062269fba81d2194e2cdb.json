{"ast":null,"code":"import { _saveQuestion, _saveQuestionAnswer } from \"../utils/_DATA\";\nimport { updateUserAnswers, updateUserQuestions } from \"./users\";\nexport const RECEIVE_QUESTIONS = \"RECEIVE_QUESTIONS\";\nexport const ADD_QUESTION = \"ADD_QUESTION\";\nexport const ADD_ANSWER = \"ADD_ANSWER\";\nexport function receiveQuestions(questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions\n  };\n}\n\nfunction addQuestion(question) {\n  return {\n    type: ADD_QUESTION,\n    question\n  };\n}\n\nconst saveQuestion = async questionInfo => {\n  try {\n    const result = await fetch(\"http://127.0.0.1:8000/api/createQuestion\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user_id: questionInfo.authedUser,\n        optionOneText: questionInfo.optionOneText,\n        optionTwoText: questionInfo.optionOneText\n      })\n    });\n\n    if (!result.ok) {\n      console.log(\"error\");\n      throw new Error(`Error: Status ${result.status}`);\n    }\n\n    console.log(result);\n  } catch (error) {\n    return alert(\"Error occured\");\n  }\n};\n\nexport function handleAddQuestion(optionOneText, optionTwoText) {\n  return async (dispatch, getState) => {\n    const {\n      authedUser\n    } = getState();\n    return saveQuestion({\n      optionOneText,\n      optionTwoText,\n      authedUser\n    }).then(question => {// dispatch(addQuestion({optionOneText, optionTwoText, authedUser}));\n      // dispatch(updateUserQuestions(question.id, authedUser));\n    });\n  };\n}\n\nfunction addAnswer(answer) {\n  return {\n    type: ADD_ANSWER,\n    answer\n  };\n}\n\nconst saveAnswer = async answerInfo => {\n  try {\n    const result = await fetch(\"http://127.0.0.1:8000/api/addVote\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        question_id: answerInfo.qid,\n        user_id: answerInfo.authedUser,\n        option: answerInfo.answer\n      })\n    });\n\n    if (!result.ok) {\n      console.log(\"error\");\n      throw new Error(`Error: Status ${result.status}`);\n    }\n  } catch (error) {\n    return alert(\"Error occured\");\n  }\n};\n\nexport function handleAddAnswer(answerInfo) {\n  return async dispatch => {\n    return saveAnswer(answerInfo).then(() => {\n      dispatch(addAnswer(answerInfo));\n      dispatch(updateUserAnswers(answerInfo));\n    });\n  };\n}","map":{"version":3,"names":["_saveQuestion","_saveQuestionAnswer","updateUserAnswers","updateUserQuestions","RECEIVE_QUESTIONS","ADD_QUESTION","ADD_ANSWER","receiveQuestions","questions","type","addQuestion","question","saveQuestion","questionInfo","result","fetch","method","headers","Accept","body","JSON","stringify","user_id","authedUser","optionOneText","optionTwoText","ok","console","log","Error","status","error","alert","handleAddQuestion","dispatch","getState","then","addAnswer","answer","saveAnswer","answerInfo","question_id","qid","option","handleAddAnswer"],"sources":["/home/talha/Documents/Laravel With React/Employees poll project with laravel/employee-polls-web-app/src/actions/questions.js"],"sourcesContent":["import { _saveQuestion, _saveQuestionAnswer } from \"../utils/_DATA\";\nimport { updateUserAnswers, updateUserQuestions } from \"./users\";\n\nexport const RECEIVE_QUESTIONS = \"RECEIVE_QUESTIONS\";\nexport const ADD_QUESTION = \"ADD_QUESTION\";\nexport const ADD_ANSWER = \"ADD_ANSWER\";\n\nexport function receiveQuestions(questions) {\n\treturn {\n\t\ttype: RECEIVE_QUESTIONS,\n\t\tquestions,\n\t};\n}\n\nfunction addQuestion(question) {\n\treturn {\n\t\ttype: ADD_QUESTION,\n\t\tquestion,\n\t};\n}\n\nconst saveQuestion = async (questionInfo) => {\n    try {\n        const result = await fetch(\"http://127.0.0.1:8000/api/createQuestion\", {\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                user_id: questionInfo.authedUser,\n                optionOneText: questionInfo.optionOneText,\n                optionTwoText: questionInfo.optionOneText,\n            }),\n        });\n\n        if (!result.ok) {\n            console.log(\"error\");\n            throw new Error(`Error: Status ${result.status}`);\n        }\n        console.log(result);\n    } catch (error) {\n        return alert(\"Error occured\");\n    }\n}\n\nexport function handleAddQuestion(optionOneText, optionTwoText) {\n\treturn async (dispatch, getState) => {\n\t\tconst { authedUser } = getState();\n\n\t\treturn saveQuestion({\n\t\t\toptionOneText,\n\t\t\toptionTwoText,\n\t\t\tauthedUser,\n\t\t}).then((question) => {\n\t\t\t// dispatch(addQuestion({optionOneText, optionTwoText, authedUser}));\n\t\t\t// dispatch(updateUserQuestions(question.id, authedUser));\n\t\t});\n\t};\n}\n\nfunction addAnswer(answer) {\n\treturn {\n\t\ttype: ADD_ANSWER,\n\t\tanswer,\n\t};\n}\n\nconst saveAnswer = async (answerInfo) => {\n    try {\n        const result = await fetch(\"http://127.0.0.1:8000/api/addVote\", {\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                question_id: answerInfo.qid,\n                user_id: answerInfo.authedUser,\n                option: answerInfo.answer,\n            }),\n        });\n\n        if (!result.ok) {\n            console.log(\"error\");\n            throw new Error(`Error: Status ${result.status}`);\n        }\n    } catch (error) {\n        return alert(\"Error occured\");\n    }\n}\n\nexport function handleAddAnswer(answerInfo) {\n\treturn async (dispatch) => {\n\t\treturn saveAnswer(answerInfo).then(() => {\n            dispatch(addAnswer(answerInfo));\n            dispatch(updateUserAnswers(answerInfo));\n        });\n\t};\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}